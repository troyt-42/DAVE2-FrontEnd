!function(){"use strict";function e(e,t,r,o,a,i,n,l,m,s,p){function c(){I.formModel={}}function u(){}function d(){console.log(I.randomImporterFormModel),s.emit("createRandomImporter",I.randomImporterFormModel)}function g(e){var t=o.open({templateUrl:"Importer/changeDataItemModal.html",controller:["$scope","$modalInstance",function(t,r){t.dataItem=e,t.type="text",t.ok=function(){r.close({name:t.dataItem.name,value:t.dataItem.value})},t.cancel=function(){r.dismiss("cancel")}}]});t.result.then(function(e){console.log(e)})}function f(e){var t=I.fileToUpload.indexOf(e);-1!==t&&(I.fileToUpload.splice(t,1),console.log(I.formModel))}function v(){var e=I.fileToUpload;if(console.log(e),e!=={}){for(var t={importerName:I.createNewImporterFormModel.Name,files:[],location:I.createNewImporterFormModel.Location,description:I.createNewImporterFormModel.Description,userName:"troy"},r=0;r<I.fileToUpload.length;r++)t.files.push({fileName:I.fileToUpload[r].name});p.DestroyDirectiveService(".angular-directive",angular.element(".angular-directive").isolateScope()),I.progressing=!0,l.upload({url:"/Importer/uploadFile",file:e,fields:{uploadInfo:{name:I.createNewImporterFormModel.Name,location:I.createNewImporterFormModel.Location,description:I.createNewImporterFormModel.Description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);console.log(t),I.fileUploadProgress=t,t>=100&&(I.progressingStat[0]=1,I.waitingMessage="Waiting response from server",console.log(I.waitingMessage))}).success(function(e,r,o,a){s.emit("createNewImporter",t),console.log("uploadSuccess")}).error(function(e){alert(e)})}else alert("Please Select a File")}var I=this;I.cancelFile=c,I.cancelRandomImporter=u,I.createRandomImporter=d,I.changeDataItemConfig=g,I.removeFile=f,I.submitFile=v,I.alerts={stepOne:[],stepTwoB:[]},I.createNewImporterFormModel={},I.leftMenuExpanded=!1,I.fileToUpload=[],I.fileUploadProgress=0,I.randomImporterFormFields=[{type:"input",key:"Maximum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Maximum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Reduction (/mm)",data:{inputType:"number",placeholder:0}},{type:"input",key:"Target Importer Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}}],I.randomImporterFormModel={"Maximum Value":0,"Minimum Value":0,"Maximum Slope":0,"Minimum Slope":0,"Reduction (/mm)":1e3,"Target Data Item Name":"test",Location:"brampton"},I.progressing=!1,I.progressingStat=[0,1],I.stepOneSearchMode=!1,I.stepOneSearchModeInput={},I.importerCreationPromise="",I.importerToDisplayContent=[],I.promiseToSolve=null,I.requestImporterPromiseToSolve=null,I.stepOne=!0,I.stepTwo=!1,I.stepTwoB=!1,I.stepThree=!1,I.stepOneLoading=!0,I.stepThreeFormCollection=[],I.sampleDataQuantity=50,I.sampleDataReduction=50,I.search2={fieldName:""},I.systemStatus="Normal",I.optionStatus={firstOpen:!1,secondOpen:!0,thirdOpen:!1,fourthOpen:!1},I.createNewImporterFormFields=[{type:"input",key:"Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}},{type:"textarea",key:"Description"}],I.waitingMessage="File Uploading",r.$on("progressing",function(e,t){I.progressing=!0,I.progressingStat=t,I.importerCreationPromise=i(function(){I.fileUploadProgress+=4},1e3,25),console.log("progressing"),console.log(t)}),r.$on("toggleLeftMenu",function(){angular.element(".importerContainerLeftMenu").toggleClass("noExpanded"),angular.element(".importerContainerRightPanel").toggleClass("expanded"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-left  animated flipInY"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-right  animated flipInY")," Expand"===angular.element("#js-expand-sign").html()?angular.element("#js-expand-sign").html(" Collapse"):" Collapse"===angular.element("#js-expand-sign").html()&&angular.element("#js-expand-sign").html(" Expand")}),r.$watch(function(){return I.stepOne},function(e){e===!0?r.$emit("dynamicBackground"):e===!1&&r.$emit("removeDynamicBackground")});var C=[];s.on("importerCreationResponse",function(e){if("Normal"===I.systemStatus&&(C=C.concat(e.data),1===e.completeState)){if(console.log(I.stepThreeFormCollection),I.stepThreeFormCollection=m(C),I.importerCreationMeta={importerName:e.importerName,location:e.location,userName:e.userName,files:e.files,description:e.description},C=[],I.progressing=!1,console.log(angular.element("dave-importer-configuration-page")),!angular.element("dave-importer-configuration-page").length){var t=r.$new(!0);t.formCollection=I.stepThreeFormCollection,t.importerCreationMeta=I.importerCreationMeta,p.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-configuration-page  class="angular-directive" form-collection="{{formCollection}}" importer-creation-meta="{{importerCreationMeta}}"></dave-importer-configuration-page>',t,a)}I.fileUploadProgress=0}}),s.on("importerCreationFinalResponse",function(t){if("Normal"===I.systemStatus){if(console.log(t),"COMPLETE"===t.reply){I.importerToRequest={importerName:t.payload.importerName,location:t.payload.location,ownerName:t.payload.ownerName,description:t.payload.description};var o=r.$new(!0);o.importerToRequest={},angular.copy(I.importerToRequest,o.importerToRequest),e(function(){p.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',o,a),I.progressing=!1},1500)}"PROGRESSING"===t.reply&&(I.progressingStat[1]=t.payload.numFiles,I.fileUploadProgress=100*t.payload.status,1===t.payload.status&&(I.progressingStat[0]=t.payload.numFinishProcessedFile)),"submitting"===t.reply&&1===t.completeState&&(i.cancel(I.importerCreationPromise),I.fileUploadProgress=100)}})}function t(e,t,r,o,a){function i(){m.uploading=!0,o.upload({url:"/Importer/uploadFile",file:m.files,fields:{uploadInfo:{name:m.currentImporter.importerName,location:m.currentImporter.location,description:m.currentImporter.description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);m.fileUploadProgress=t,t>=100&&(m.waitingMessage="Waiting response from server")}).success(function(e,t,r,o){for(var i={importerName:m.currentImporter.importerName,location:m.currentImporter.location,files:[]},n=0;n<m.files.length;n++)i.files.push({fileName:m.files[n].name});a.emit("updateImporter",i),console.log("uploadSuccess")}).error(function(e){alert(e)})}function n(){t.dismiss("cancel")}function l(e){var t=m.files.indexOf(e);-1!==t&&m.files.splice(t,1)}var m=this;m.update=i,m.cancel=n,m.removeFile=l,m.currentImporter=r,m.files=null,m.fileUploadProgress=0,m.waitingMessage="",m.uploading=!1}function r(e,t,r,o,a,i,n,l){function m(){t.emit("requestImporterList"),l.CheckDirectiveExpandStatus(".importerContainerRightPanel"),T.promiseToSolve=o(function(){for(var e=!1,t=0;t<T.alerts.length;t++)"Loading Importer List Failed. Please Check Your Internet Connection."===T.alerts[t].msg&&(e=!0);e||T.alerts.push({type:"danger",msg:"Loading Importer List Failed. Please Check Your Internet Connection."}),T.systemStatus="Error"},5e3)}function s(e,t){0!==T.avaliableTableColumns.length&&(T.importerListTableColumns[e.index-1].status=!0,T.avaliableTableColumns.splice(t,1))}function p(e,t,r){if(console.log(t),13===e.keyCode)if(t.index===t.newIndex)T.addTableColumn(t,r);else{t.newIndex>T.importerListTableColumns.length&&(t.newIndex=T.importerListTableColumns.length),t.newIndex<1&&(t.newIndex=1),T.importerListTableColumns[t.index-1].index=t.newIndex-1,T.importerListTableColumns[t.newIndex-1].index=t.index-1;var o=T.importerListTableColumns[t.index-1];T.importerListTableColumns[t.index-1]=T.importerListTableColumns[t.newIndex-1],T.importerListTableColumns[t.newIndex-1]=o,t.index=t.newIndex,console.log(t),console.log(T.avaliableTableColumns),console.log(T.importerListTableColumns),T.addTableColumn(t,r)}}function c(e){angular.element("div.alert.animated#importerList"+e).removeClass("fadeInDown"),angular.element("div.alert.animated#importerList"+e).addClass("fadeOutUp"),T.alerts.splice(e,1)}function u(e){for(var t=e-1;t>=0;t--)if(T.importerListTableColumns[t].status){var r=T.importerListTableColumns[e];r.index=t,T.importerListTableColumns[t].index=e,T.importerListTableColumns[e]=T.importerListTableColumns[t],T.importerListTableColumns[t]=r;break}}function d(e){for(var t=e+1;t<T.importerListTableColumns.length;t++)if(T.importerListTableColumns[t].status){var r=T.importerListTableColumns[e];r.index=t,T.importerListTableColumns[t].index=e,T.importerListTableColumns[e]=T.importerListTableColumns[t],T.importerListTableColumns[t]=r;break}}function g(e){T.importerListTableColumns[e].status=!1,T.avaliableTableColumns.push({index:e+1,value:T.importerListTableColumns[e].name,newIndex:e+1})}function f(e){T.importerToRequest=e;var t=r.$parent.$new(!0);t.importerToRequest={},angular.copy(T.importerToRequest,t.importerToRequest),l.DestroyDirectiveService("dave-importer-list-page",r),l.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',t,a)}function v(){angular.element(".js-layout").toggleClass("hidden")}function I(){r.$emit("toggleLeftMenu")}function C(){var e=r.$parent.$new(!0);l.DestroyDirectiveService("dave-importer-list-page",r),l.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-search-mode-page class="angular-directive" back-directive="<dave-importer-list-page></dave-importer-list-page>"></dave-importer-search-mode-page>',e,a)}var T=this;T.activate=m,T.addTableColumn=s,T.addTableColumnKeyPress=p,T.closeAlert=c,T.decreaseColumnIndex=u,T.increaseColumnIndex=d,T.removeColumn=g,T.requestImporter=f,T.toggleLayOutMenu=v,T.toggleLeftMenu=I,T.toggleSearchMode=C,T.alerts=[],T.avaliableTableColumns=[],T.importerListCurrentPage=1,T.importerList=[],T.importerListTableColumns=[{name:"importerName",status:!0,index:0},{name:"location",status:!0,index:1},{name:"ownerName",status:!0,index:2},{name:"type",status:!0,index:3},{name:"description",status:!0,index:4}],T.importerToRequest="",T.loading=!0,T.promiseToSolve="",T.search={},T.systemStatus="Normal",t.on("importerListData",function(e){"Normal"===T.systemStatus&&(o.cancel(T.promiseToSolve),1!==e.completeState?T.importerList=T.importerList.concat(e.list_out):(T.importerList=T.importerList.concat(e.list_out),T.loading=!1))}),r.$watch(function(){return T.search},function(){console.log(T.search)},!0),r.$on("$destroy",function(e){t.removeListener("importerListData")}),T.activate()}function o(e,t,r,o,a,i){function n(){e.emit("requestImporter",c.importerToDisplay),i.CheckDirectiveExpandStatus(".importerContainerRightPanel"),"Normal"===c.systemStatus&&null===c.requestImporterPromiseToSolve&&(c.requestImporterPromiseToSolve=r(function(){-1===c.alerts.indexOf({type:"danger",msg:"Timeout"})&&c.alerts.push({type:"danger",msg:"Timeout"}),c.systemStatus="Error"},1500))}function l(){var e=t.$parent.$new(!0);i.DestroyDirectiveService("dave-importer-page",t),i.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',e,o)}function m(e){c.currentDataItem=e,c.importerDataItemData=c.importerDataItemToDisplay[c.currentDataItem.fieldName]}function s(){t.$emit("toggleLeftMenu")}function p(){var e=a.open({templateUrl:"Importer/ImporterModalViews/updateImporter.html",controller:"UpdateImporterModalCtrl as updateImporterModalCtrl",resolve:{currentImporter:function(){return c.importerToDisplay}}});e.result.then(function(e){console.log(e)})}var c=this;c.activate=n,c.backToImporterList=l,c.chooseDataItem=m,c.updateImporter=p,c.alerts=[],c.currentDataItem="",t.expanded=!1,c.importerDataItemToDisplay={},c.importerDataItemData=[],c.importerToDisplay=JSON.parse(t.importerToRequest),c.importerToDisplayContent=[],c.requestImporterPromiseToSolve=null,c.search={fieldName:""},c.systemStatus="Normal",c.toggleLeftMenu=s,e.on("importerData",function(t){if("Normal"===c.systemStatus&&(r.cancel(c.requestImporterPromiseToSolve),""===c.currentDataItem&&(c.currentDataItem=t.list_out[0]),c.importerToDisplayContent=c.importerToDisplayContent.concat(t.list_out),1===t.completeState&&(c.importerToDisplayContent.forEach(function(t,r,o){e.emit("requestImporterDataItemData",{fieldName:t.fieldName,location:c.importerToDisplay.location})}),0===c.importerToDisplayContent.length))){for(var o=!1,a=0;a<c.alerts.length;a++)"Received Empty Importer"===c.alerts[a].msg&&(o=!0);o||c.alerts.push({type:"warning",msg:"Received Empty Importer"})}}),e.on("importerDataItemData",function(e){"Normal"===c.systemStatus&&(c.importerDataItemToDisplay[e.name]||(c.importerDataItemToDisplay[e.name]=[]),c.importerDataItemToDisplay[e.name]=c.importerDataItemToDisplay[e.name].concat(e.data),1===e.completeState&&e.name===c.currentDataItem.fieldName&&(c.importerDataItemData=c.importerDataItemToDisplay[c.currentDataItem.fieldName]))}),t.$on("$destroy",function(t){e.removeListener("importerData"),e.removeListener("importerDataItemData")}),c.activate()}function a(e,t,r,o){function a(){var r=e.$parent.$new(!0);o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope()),o.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',r,t)}function i(){var t=[];for(var a in n.formCollection){var i={availableOptions:{}};for(var l in n.formCollection[a])switch(l){case"fields":break;case"checked":i.checked=n.formCollection[a][l];break;default:i.availableOptions[l]={name:l,value:n.formCollection[a][l]}}i.fieldName=a,t.push(i)}console.log(t),r.emit("decideImporterCreation",{location:n.importerCreationMeta.location,importerName:n.importerCreationMeta.importerName,userName:n.importerCreationMeta.userName,files:n.importerCreationMeta.files,data:t,description:n.importerCreationMeta.description});var m=[0,1];e.$emit("progressing",m),o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope())}var n=this;n.cancelImport=a,n.decideImport=i,console.log(e.formCollection),n.formCollection=JSON.parse(e.formCollection),n.importerCreationMeta=JSON.parse(e.importerCreationMeta)}function i(e,t,r,o,a,i){function n(){a.CheckDirectiveExpandStatus(".importerContainerRightPanel")}function l(){var r=e.$parent.$new(!0);a.DestroyDirectiveService("dave-importer-search-mode-page",e),a.AddDirectiveService(".importerContainerRightPanel",s.backDirective,r,t)}function m(){e.$emit("toggleLeftMenu")}var s=this;s.activate=n,s.back=l,s.toggleLeftMenu=m,s.backDirective=e.backDirective,s.activate()}angular.module("Dave2.Importer").controller("ImporterUploadCtrl",e).controller("UpdateImporterModalCtrl",t).controller("DaveImporterListPageCtrl",r).controller("DaveImporterPageCtrl",o).controller("DaveImporterConfigurationPageCtrl",a).controller("DaveImporterSearchModePageCtrl",i),e.$inject=["$timeout","$http","$scope","$modal","$compile","$interval","$cookies","Upload","FormSettingParseService","ImporterSocket","DirectiveService"],t.$inject=["$scope","$modalInstance","currentImporter","Upload","ImporterSocket"],r.$inject=["FormSettingParseService","ImporterSocket","$scope","$timeout","$compile","$rootScope","$cookies","DirectiveService"],o.$inject=["ImporterSocket","$scope","$timeout","$compile","$modal","DirectiveService"],a.$inject=["$scope","$compile","ImporterSocket","DirectiveService"],i.$inject=["$scope","$compile","$cookies","ImporterSocket","DirectiveService"]}();