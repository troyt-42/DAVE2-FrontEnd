!function(){"use strict";function e(e,t,o,a,r,n,i){function l(){return i.emit("requestImporterList"),angular.element(".importerContainerLeftMenu").toggleClass("fadeInLeft"),angular.element(".importerContainerRightPanel").toggleClass("fadeInRight"),e(function(){h.alerts.stepOne.push({type:"danger",msg:"Load Item Fails. Please Check Your Internet Connect."})},1e4)}function s(){h.stepOne=!0,h.stepTwo=!1,h.stepTwoB=!1,h.stepThree=!1}function p(){h.formModel={}}function m(){h.stepOne=!0,h.stepTwo=!1,h.stepTwoB=!1,h.stepThree=!1,h.fileUploadProgress=0,h.waitingMessage="File Uploading"}function c(e){var t=a.open({templateUrl:"Importer/changeDataItemModal.html",controller:["$scope","$modalInstance",function(t,o){t.dataItem=e,t.type="text",t.ok=function(){o.close({name:t.dataItem.name,value:t.dataItem.value})},t.cancel=function(){o.dismiss("cancel")}}]});t.result.then(function(e){console.log(e)})}function u(e){h.currentDataItem=e,h.importerDataItemData=h.importerDataItemToDisplay[h.currentDataItem.fieldName]}function d(e,t){h.alerts[t].splice(e,1)}function f(){var e=[];console.log(h.stepThreeFormCollection);for(var t in h.stepThreeFormCollection){var o={availableOptions:{}};for(var a in h.stepThreeFormCollection[t])switch(a){case"fields":break;case"checked":o.checked=h.stepThreeFormCollection[t][a];break;default:o.availableOptions[a]={name:a,value:h.stepThreeFormCollection[t][a]}}o.fieldName=t,e.push(o)}console.log(e),i.emit("decideImporterCreation",{location:h.importerCreationMeta.location,importerName:h.importerCreationMeta.importerName,userName:h.importerCreationMeta.userName,data:e}),h.stepOne=!1,h.stepTwo=!0,h.stepTwoB=!1,h.stepThree=!1}function g(e){console.log(e),h.importerToDisplay=e,i.emit("requestImporter",e)}function D(){angular.element(".importerContainerLeftMenu").toggleClass("fadeInLeft"),angular.element(".importerContainerLeftMenu").toggleClass("fadeOutRight"),h.stepOne=!1,h.stepTwo=!0,h.stepTwoB=!1,h.stepThree=!1,console.log(h.formModel);var e=h.formModel["Select A File"][0];if(console.log(e),e!=={}){var t={importerName:h.formModel.Name,fileName:h.formModel["Select A File"][0].name,location:h.formModel.Location,description:h.formModel.Description,userName:"troy"};r.upload({url:"/Importer/uploadFile",file:e,fields:{uploadInfo:{name:h.formModel.Name,filename:h.formModel["Select A File"][0].name,location:h.formModel.Location,description:h.formModel.Description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);console.log(t),h.fileUploadProgress=t,t>=100&&(h.waitingMessage="Waiting response from server",console.log(h.waitingMessage))}).success(function(e,o,a,r){i.emit("createNewImporter",t),console.log("uploadSuccess")}).error(function(e){alert(e)})}else alert("Please Select A File")}var h=this;h.backToImporterList=s,h.cancelFile=p,h.cancelImport=m,h.changeDataItemConfig=c,h.chooseDataItem=u,h.closeAlert=d,h.decideImport=f,h.requestImporter=g,h.submitFile=D,h.alerts={stepOne:[],stepTwoB:[{type:"warning",msg:"Lost Connection (still can manipulate cached data)"}]},h.availableFields={},h.currentDataItem="Fermenter Sample HPLC Ethanol",h.formModel={},h.fileUploadProgress=0,h.importerList=[],h.importerListCurrentPage=1,h.importerToDisplay={},h.importerToDisplayContent=[],h.importerDataItemToDisplay={},h.importerDataItemData=[],h.stepOne=!0,h.stepTwo=!1,h.stepTwoB=!1,h.stepThree=!1,h.stepOneLoading=!0,h.stepThreeFormCollection=[],h.sampleDataQuantity=50,h.sampleDataReduction=50,h.search={},h.search2="",h.optionStatus={firstOpen:!0,secondOpen:!1,thirdOpen:!1,fourthOpen:!1},h.formFields=[{type:"input",key:"Name"},{type:"input",key:"Location"},{type:"textarea",key:"Description"},{type:"input",key:"Select A File",data:{inputType:"file"},ngModelAttrs:{fileAccept:{attribute:"accept"},fileUploaderMarkup:{attribute:"ngf-select"},fileUploaderOnChangeMarkup:{attribute:"ngf-change"},fileUploaderModelMarkup:{attribute:"ng-model"}},templateOptions:{fileAccept:".csv",fileUploaderMarkup:"",fileUploaderOnChangeMarkup:"fileSelected($files, $event)",fileUploaderModelMarkup:"uploadfile"},expressionProperties:{"templateOptions.disabled":"!(model.Name || model.Location || model.Description)"}}],h.waitingMessage="File Uploading",o.$watch(function(){return h.stepOne},function(e){e===!0?o.$emit("dynamicBackground"):e===!1&&o.$emit("removeDynamicBackground")}),o.$watch(function(){return h.sampleDataReduction},function(e){10>=e?h.sampleDataReductionString="1 Hour":e>10&&20>=e?h.sampleDataReductionString="2 Hour":e>20&&30>=e?h.sampleDataReductionString="3 Hour":e>30&&40>=e?h.sampleDataReductionString="4 Hour":e>40&&50>=e?h.sampleDataReductionString="5 Hour":e>50&&60>=e?h.sampleDataReductionString="6 Hour":e>60&&70>=e?h.sampleDataReductionString="7 Hour":e>70&&80>=e?h.sampleDataReductionString="8 Hour":e>80&&90>=e?h.sampleDataReductionString="9 Hour":e>90&&100>=e&&(h.sampleDataReductionString="10 Hour")}),i.on("importerListData",function(t){e.cancel(T),0!==t.length?(h.importerList=h.importerList.concat(t),h.stepOneLoading=!1):(h.alerts.stepOne.push({type:"success",msg:"Load Item Success."}),console.log(h.importerList))}),i.on("importerData",function(e){0!==e.length?(h.currentDataItem=e[0],h.stepOne=!1,h.stepTwo=!1,h.stepTwoB=!0,h.stepThree=!1,h.importerToDisplayContent=e):0===e.length&&h.importerToDisplayContent.forEach(function(e,t,o){i.emit("requestImporterDataItemData",{fieldName:e.fieldName,location:h.importerToDisplay.location})})}),i.on("importerDataItemData",function(e){0!==e.data.length?(h.importerDataItemToDisplay[e.name]||(h.importerDataItemToDisplay[e.name]=[]),h.importerDataItemToDisplay[e.name]=h.importerDataItemToDisplay[e.name].concat(e.data)):0===e.data.length&&(h.importerDataItemData=h.importerDataItemToDisplay[h.currentDataItem.fieldName],console.log(h.importerDataItemData))});var I=[];i.on("importerCreationResponse",function(e){0!==e.data.length?I=I.concat(e.data):(console.log(h.stepThreeFormCollection),h.stepThreeFormCollection=n(I),h.importerCreationMeta={importerName:e.importerName,location:e.location,userName:e.userName},I=[],h.stepOne=!1,h.stepTwo=!1,h.stepTwoB=!1,h.stepThree=!0)});var T=l()}angular.module("Dave2.Importer").controller("ImporterUploadCtrl",e),e.$inject=["$timeout","$http","$scope","$modal","Upload","FormSettingParseService","ImporterSocket"]}();