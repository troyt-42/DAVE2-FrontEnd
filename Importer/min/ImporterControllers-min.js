!function(){"use strict";function e(e,t,o,r,a,i,n,l,m,s,p,c){function u(){c.writeState("hasMenu",!0)}function d(){h.formModel={}}function g(){h.createJobMode=!1,h.modifyJobMode=!1}function v(e){var t=r.open({templateUrl:"Importer/changeDataItemModal.html",controller:["$scope","$modalInstance",function(t,o){t.dataItem=e,t.type="text",t.ok=function(){o.close({name:t.dataItem.name,value:t.dataItem.value})},t.cancel=function(){o.dismiss("cancel")}}]});t.result.then(function(e){console.log(e)})}function f(){h.createJobMode=!0}function I(){console.log(h.currentJob),s.emit("deleteJob",h.currentJob)}function b(e){console.log(h.jobs[e]),h.modifyJobMode=!0,h.currentJob=h.jobs[e],h.randomImporterFormModel={"Maximum Value":h.jobs[e].maximum,"Minimum Value":h.jobs[e].minimum,"Maximum Slope":h.jobs[e].maximumSlope,"Interval (/ms)":h.jobs[e].interval,"Time Float (/ms)":h.jobs[e].timeFloat,"Target Data Item":h.jobs[e].targetDataItem,Location:h.jobs[e].location,Type:h.jobs[e].type}}function C(e){var t=h.fileToUpload.indexOf(e);-1!==t&&(h.fileToUpload.splice(t,1),console.log(h.formModel))}function T(){h.loadingJobs=!0,h.jobs=[],h.avaliableDataItem=[],s.emit("requestJobs")}function D(){var e=h.fileToUpload;if(console.log(e),e!=={}){for(var t={importerName:h.createNewImporterFormModel.Name,files:[],location:h.createNewImporterFormModel.Location,description:h.createNewImporterFormModel.Description,userName:"troy"},o=0;o<h.fileToUpload.length;o++)t.files.push({fileName:h.fileToUpload[o].name});p.DestroyDirectiveService(".angular-directive",angular.element(".angular-directive").isolateScope()),h.progressing=!0,l.upload({url:"/Importer/uploadFile",file:e,fields:{uploadInfo:{name:h.createNewImporterFormModel.Name,location:h.createNewImporterFormModel.Location,description:h.createNewImporterFormModel.Description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);console.log(t),h.fileUploadProgress=t,t>=100&&(h.progressingStat[0]=1,h.waitingMessage="Waiting response from server",console.log(h.waitingMessage))}).success(function(e,o,r,a){s.emit("createNewImporter",t),console.log("uploadSuccess")}).error(function(e){alert(e)})}else alert("Please Select a File")}function y(){h.waitingJobCreation=!0,h.modifyJobMode=!1,h.createJobMode=!1,s.emit("createJob",{maximum:h.randomImporterFormModel["Maximum Value"],minimum:h.randomImporterFormModel["Minimum Value"],maximumSlope:h.randomImporterFormModel["Maximum Slope"],interval:h.randomImporterFormModel["Interval (/ms)"],timeFloat:h.randomImporterFormModel["Time Float (/ms)"],targetDataItem:h.randomImporterFormModel["Target Data Item"],location:h.randomImporterFormModel.Location,type:h.randomImporterFormModel.Type,range:h.randomImporterFormModel["Range (/h)"]})}var h=this;h.activate=u,h.cancelFile=d,h.cancelJobCreation=g,h.changeDataItemConfig=v,h.createNewJob=f,h.deleteJob=I,h.modifyJob=b,h.removeFile=C,h.requestJobs=T,h.submitFile=D,h.submitJob=y,h.alerts={},h.availableDataItems=[],h.createJobMode=!1,h.currentJob="",h.createNewImporterFormModel={},h.leftMenuExpanded=!1,h.loadingJobs=!1,h.fileToUpload=[],h.fileUploadProgress=0,h.randomImporterFormFields=[{type:"input",key:"Maximum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Maximum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Interval (/ms)",data:{inputType:"number",placeholder:0}},{type:"input",key:"Time Float (/ms)",data:{inputType:"number",placeholder:0},validators:{halfOfInterval:function(e,t,o){return t>.5*h.randomImporterFormModel["Interval (/ms)"]||0>t?!1:!0}}},{type:"select2",key:"Target Data Item",data:{options:[]}},{type:"input",key:"Location",data:{placeholder:"example"}},{type:"select2",key:"Type",data:{options:["Live/Slow Generation","Static/Fast Generation"]}}],h.randomImporterFormModel={"Maximum Value":100,"Minimum Value":0,"Maximum Slope":2,"Interval (/ms)":1e3,"Time Float (/ms)":0,"Target Data Item":"",Location:"brampton",Type:"Live/Slow Generation"},h.progressing=!1,h.progressingStat=[0,1],h.stepOneSearchMode=!1,h.stepOneSearchModeInput={},h.importerCreationPromise="",h.importerToDisplayContent=[],h.jobs=[],h.jobsLoaded=!1,h.modifyJobMode=!1,h.promiseToSolve=null,h.requestImporterPromiseToSolve=null,h.stepOne=!0,h.stepTwo=!1,h.stepTwoB=!1,h.stepThree=!1,h.stepOneLoading=!0,h.stepThreeFormCollection=[],h.sampleDataQuantity=50,h.sampleDataReduction=50,h.search2={fieldName:""},h.systemStatus="Normal",h.optionStatus={firstOpen:!1,secondOpen:!0,thirdOpen:!1,fourthOpen:!1},h.createNewImporterFormFields=[{type:"input",key:"Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}},{type:"textarea",key:"Description"}],h.waitingMessage="File Uploading",h.waitingJobCreation=!1,o.$on("progressing",function(e,t){h.progressing=!0,h.progressingStat=t,h.importerCreationPromise=i(function(){h.fileUploadProgress+=4},1e3,25),console.log("progressing"),console.log(t)}),o.$on("toggleLeftMenu",function(){angular.element(".importerContainerLeftMenu").toggleClass("noExpanded"),angular.element(".importerContainerRightPanel").toggleClass("expanded"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-left  animated flipInY"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-right  animated flipInY")," Expand"===angular.element("#js-expand-sign").html()?angular.element("#js-expand-sign").html(" Collapse"):" Collapse"===angular.element("#js-expand-sign").html()&&angular.element("#js-expand-sign").html(" Expand")}),o.$watch(function(){return h.stepOne},function(e){e===!0?o.$emit("dynamicBackground"):e===!1&&o.$emit("removeDynamicBackground")});var S=[];o.$on("socket:importerCreationResponse",function(e,t){if(console.log(e.name),"Normal"===h.systemStatus&&(S=S.concat(t.data),1===t.completeState)){if(console.log(h.stepThreeFormCollection),h.stepThreeFormCollection=m(S),h.importerCreationMeta={importerName:t.importerName,location:t.location,userName:t.userName,files:t.files,description:t.description},S=[],h.progressing=!1,console.log(angular.element("dave-importer-configuration-page")),!angular.element("dave-importer-configuration-page").length){var r=o.$new(!0);r.formCollection=h.stepThreeFormCollection,r.importerCreationMeta=h.importerCreationMeta,p.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-configuration-page  class="angular-directive" form-collection="{{formCollection}}" importer-creation-meta="{{importerCreationMeta}}"></dave-importer-configuration-page>',r,a)}h.fileUploadProgress=0}}),o.$on("socket:importerCreationFinalResponse",function(t,r){if(console.log(t.name),"Normal"===h.systemStatus){if(console.log(r),"COMPLETE"===r.reply){h.importerToRequest={importerName:r.payload.importerName,location:r.payload.location,ownerName:r.payload.ownerName,description:r.payload.description};var n=o.$new(!0);n.importerToRequest={},angular.copy(h.importerToRequest,n.importerToRequest),e(function(){p.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',n,a),h.progressing=!1},1500)}"PROGRESSING"===r.reply&&(h.progressingStat[1]=r.payload.numFiles,h.fileUploadProgress=100*r.payload.status,1===r.payload.status&&(h.progressingStat[0]=r.payload.numFinishProcessedFile)),"submitting"===r.reply&&1===r.completeState&&(i.cancel(h.importerCreationPromise),h.fileUploadProgress=100)}}),o.$on("socket:jobsData",function(e,t){console.log(e.name),console.log(t),"Normal"===h.systemStatus&&(1!==t.completeState?(h.jobs=h.jobs.concat(t.list_out),h.avaliableDataItem=h.avaliableDataItem.concat(t.avaiableDataItem)):(h.jobs=h.jobs.concat(t.list_out),h.avaliableDataItem=h.avaliableDataItem.concat(t.avaiableDataItem),h.randomImporterFormFields[5].data.options=h.avaliableDataItem,h.randomImporterFormModel["Target Data Item"]=h.avaliableDataItem[0],h.loadingJobs=!1,h.jobsLoaded=!0))}),h.activate()}function t(e,t,o,r,a){function i(){m.uploading=!0,r.upload({url:"/Importer/uploadFile",file:m.files,fields:{uploadInfo:{name:m.currentImporter.importerName,location:m.currentImporter.location,description:m.currentImporter.description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);m.fileUploadProgress=t,t>=100&&(m.waitingMessage="Waiting response from server")}).success(function(e,t,o,r){for(var i={importerName:m.currentImporter.importerName,location:m.currentImporter.location,files:[]},n=0;n<m.files.length;n++)i.files.push({fileName:m.files[n].name});a.emit("updateImporter",i),console.log("uploadSuccess")}).error(function(e){alert(e)})}function n(){t.dismiss("cancel")}function l(e){var t=m.files.indexOf(e);-1!==t&&m.files.splice(t,1)}var m=this;m.update=i,m.cancel=n,m.removeFile=l,m.currentImporter=o,m.files=null,m.fileUploadProgress=0,m.waitingMessage="",m.uploading=!1}function o(e,t,o,r,a,i,n,l){function m(){void 0===n.getObject("importerListTableColumns")&&n.putObject("importerListTableColumns",C.importerListTableColumns),C.importerListTableColumns=n.getObject("importerListTableColumns"),C.avaliableImporterTableColumns=n.getObject("avaliableImporterTableColumns")||[],t.emit("requestImporterList"),l.CheckDirectiveExpandStatus(".importerContainerRightPanel"),C.promiseToSolve=r(function(){for(var e=!1,t=0;t<C.alerts.length;t++)"Loading Importer List Failed. Please Check Your Internet Connection."===C.alerts[t].msg&&(e=!0);e||C.alerts.push({type:"danger",msg:"Loading Importer List Failed. Please Check Your Internet Connection."}),C.systemStatus="Error"},5e3)}function s(e,t){0!==C.avaliableImporterTableColumns.length&&(C.importerListTableColumns[e.index-1].status=!0,C.avaliableImporterTableColumns.splice(t,1),n.putObject("importerListTableColumns",C.importerListTableColumns),n.putObject("avaliableImporterTableColumns",C.avaliableImporterTableColumns))}function p(e,t,o){if(console.log(t),13===e.keyCode)if(t.index===t.newIndex)C.addTableColumn(t,o);else{t.newIndex>C.importerListTableColumns.length&&(t.newIndex=C.importerListTableColumns.length),t.newIndex<1&&(t.newIndex=1),C.importerListTableColumns[t.index-1].index=t.newIndex-1,C.importerListTableColumns[t.newIndex-1].index=t.index-1;var r=C.importerListTableColumns[t.index-1];C.importerListTableColumns[t.index-1]=C.importerListTableColumns[t.newIndex-1],C.importerListTableColumns[t.newIndex-1]=r,t.index=t.newIndex,console.log(t),console.log(C.avaliableImporterTableColumns),console.log(C.importerListTableColumns),C.addTableColumn(t,o)}n.putObject("importerListTableColumns",C.importerListTableColumns),n.putObject("avaliableImporterTableColumns",C.avaliableImporterTableColumns)}function c(e){angular.element("div.alert.animated#importerList"+e).removeClass("fadeInDown"),angular.element("div.alert.animated#importerList"+e).addClass("fadeOutUp"),C.alerts.splice(e,1)}function u(e){for(var t=e-1;t>=0;t--)if(C.importerListTableColumns[t].status){var o=C.importerListTableColumns[e];o.index=t,C.importerListTableColumns[t].index=e,C.importerListTableColumns[e]=C.importerListTableColumns[t],C.importerListTableColumns[t]=o;break}}function d(e){for(var t=e+1;t<C.importerListTableColumns.length;t++)if(C.importerListTableColumns[t].status){var o=C.importerListTableColumns[e];o.index=t,C.importerListTableColumns[t].index=e,C.importerListTableColumns[e]=C.importerListTableColumns[t],C.importerListTableColumns[t]=o;break}}function g(e){C.importerListTableColumns[e].status=!1,C.avaliableImporterTableColumns.push({index:e+1,value:C.importerListTableColumns[e].name,newIndex:e+1}),console.log(C.avaliableImporterTableColumns),n.putObject("importerListTableColumns",C.importerListTableColumns),n.putObject("avaliableImporterTableColumns",C.avaliableImporterTableColumns)}function v(e){C.importerToRequest=e;var t=o.$parent.$new(!0);t.importerToRequest={},angular.copy(C.importerToRequest,t.importerToRequest),l.DestroyDirectiveService("dave-importer-list-page",o),l.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',t,a)}function f(){angular.element(".js-layout").toggleClass("hidden")}function I(){o.$emit("toggleLeftMenu")}function b(){l.EnterSearchMode("dave-importer-list-page","<dave-importer-list-page></dave-importer-list-page>",".importerContainerRightPanel",o,a)}var C=this;C.activate=m,C.addTableColumn=s,C.addTableColumnKeyPress=p,C.closeAlert=c,C.decreaseColumnIndex=u,C.increaseColumnIndex=d,C.removeColumn=g,C.requestImporter=v,C.toggleLayOutMenu=f,C.toggleLeftMenu=I,C.toggleSearchMode=b,C.alerts=[],C.avaliableImporterTableColumns=[],C.importerListCurrentPage=1,C.importerList=[],C.importerListTableColumns=[{name:"importerName",status:!0,index:0},{name:"location",status:!0,index:1},{name:"ownerName",status:!0,index:2},{name:"type",status:!0,index:3},{name:"description",status:!0,index:4}],C.importerToRequest="",C.loading=!0,C.promiseToSolve="",C.search={},C.systemStatus="Normal",o.$on("socket:importerListData",function(e,t){console.log(e.name),"Normal"===C.systemStatus&&(r.cancel(C.promiseToSolve),1!==t.completeState?C.importerList=C.importerList.concat(t.list_out):(C.importerList=C.importerList.concat(t.list_out),C.loading=!1))}),o.$watch(function(){return C.search},function(){console.log(C.search)},!0),C.activate()}function r(e,t,o,r,a,i,n,l){function m(){console.log(n.getObject("requestedImporter")),void 0===n.getObject("requestedImporter")&&(n.putObject("requestedImporter",f.importerToDisplay),console.log(f.importerToDisplay)),f.importerToDisplay=n.getObject("requestedImporter"),n.remove("requestedImporter"),e.emit("requestImporter",f.importerToDisplay),l.CheckDirectiveExpandStatus(".importerContainerRightPanel"),f.loading=!0}function s(){var e=t.$parent.$new(!0);l.DestroyDirectiveService("dave-importer-page",t),l.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',e,r)}function p(e){f.currentDataItem=e,f.importerDataItemData=f.importerDataItemToDisplay[f.currentDataItem.fieldName]}function c(e){angular.element("div.alert.animated#importer"+e).removeClass("fadeInDown"),angular.element("div.alert.animated#importer"+e).addClass("fadeOutUp"),f.alerts.splice(e,1)}function u(){t.$emit("toggleLeftMenu")}function d(){var e=a.open({templateUrl:"Importer/ImporterModalViews/updateImporter.html",controller:"UpdateImporterModalCtrl as updateImporterModalCtrl",resolve:{currentImporter:function(){return f.importerToDisplay}}});e.result.then(function(e){console.log(e)})}function g(){console.log(i.url()),i.url("/DataItemDisplay"),l.DestroyDirectiveService("dave-importer-page",t)}function v(){n.putObject("requestedImporter",f.importerToDisplay),l.EnterSearchMode("dave-importer-page","<dave-importer-page></dave-importer-page>",".importerContainerRightPanel",t,r)}var f=this;f.activate=m,f.backToImporterList=s,f.chooseDataItem=p,f.closeAlert=c,f.updateImporter=d,f.viewMoreData=g,f.alerts=[],f.currentDataItem="",t.expanded=!1,f.importerDataItemToDisplay={},f.importerDataItemData=[],f.importerToDisplay=t.importerToRequest?JSON.parse(t.importerToRequest):{},f.importerToDisplayContent=[],f.loading=!1,f.requestDataItemPromiseToSolve=null,f.search={fieldName:""},f.systemStatus="Normal",f.toggleLeftMenu=u,f.toggleSearchMode=v,t.$on("socket:importerData",function(t,r){if(console.log(t.name),"Normal"===f.systemStatus&&(""===f.currentDataItem&&(f.currentDataItem=r.list_out[0]),f.importerToDisplayContent=f.importerToDisplayContent.concat(r.list_out),1===r.completeState&&(f.loading=!0,f.importerToDisplayContent.forEach(function(t,o,r){e.emit("requestImporterDataItemData",{fieldName:t.fieldName,location:f.importerToDisplay.location})}),null===f.requestDataItemPromiseToSolve&&(f.requestDataItemPromiseToSolve=o(function(){-1===f.alerts.indexOf({type:"danger",msg:"Data Item Timeout"})&&f.alerts.push({type:"danger",msg:"Data Item Timeout"}),f.systemStatus="Error"},3e3)),0===f.importerToDisplayContent.length))){for(var a=!1,i=0;i<f.alerts.length;i++)"Received Empty Importer"===f.alerts[i].msg&&(a=!0);a||f.alerts.push({type:"warning",msg:"Received Empty Importer"})}}),t.$on("socket:importerDataItemData",function(e,t){console.log(e.name),"Normal"===f.systemStatus&&(o.cancel(f.requestDataItemPromiseToSolve),f.loading=!1,f.importerDataItemToDisplay[t.name]||(f.importerDataItemToDisplay[t.name]=[]),f.importerDataItemToDisplay[t.name]=f.importerDataItemToDisplay[t.name].concat(t.data),1===t.completeState&&t.name===f.currentDataItem.fieldName&&(console.log(f.importerDataItemToDisplay[f.currentDataItem.fieldName].length),f.importerDataItemData=f.importerDataItemToDisplay[f.currentDataItem.fieldName]))}),f.activate()}function a(e,t,o,r){function a(){var o=e.$parent.$new(!0);r.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope()),r.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',o,t)}function i(){var t=[];for(var a in n.formCollection){var i={availableOptions:{}};for(var l in n.formCollection[a])switch(l){case"fields":break;case"checked":i.checked=n.formCollection[a][l];break;default:i.availableOptions[l]={name:l,value:n.formCollection[a][l]}}i.fieldName=a,t.push(i)}console.log(t),o.emit("decideImporterCreation",{location:n.importerCreationMeta.location,importerName:n.importerCreationMeta.importerName,userName:n.importerCreationMeta.userName,files:n.importerCreationMeta.files,data:t,description:n.importerCreationMeta.description});var m=[0,1];e.$emit("progressing",m),r.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope())}var n=this;n.cancelImport=a,n.decideImport=i,console.log(e.formCollection),n.formCollection=JSON.parse(e.formCollection),n.importerCreationMeta=JSON.parse(e.importerCreationMeta)}function i(e,t,o,r,a,i){function n(){a.CheckDirectiveExpandStatus(".importerContainerRightPanel"),s.searchableColumns=o.getObject("importerListTableColumns"),s.hasMenu=i.readState("hasMenu")}function l(){var o=e.$parent.$new(!0);a.DestroyDirectiveService("dave-importer-search-mode-page",e),a.AddDirectiveService(s.targetContainer,s.backDirective,o,t)}function m(){e.$emit("toggleLeftMenu")}var s=this;console.log(e.options),s.activate=n,s.back=l,s.hasMenu="",console.log(s.hasMenu),s.toggleLeftMenu=m,s.backDirective=e.backDirective,s.targetContainer=e.targetContainer,console.log(e.targetContainer),console.log(s.targetContainer),s.activate()}angular.module("Dave2.Importer").controller("ImporterUploadCtrl",e).controller("UpdateImporterModalCtrl",t).controller("DaveImporterListPageCtrl",o).controller("DaveImporterPageCtrl",r).controller("DaveImporterConfigurationPageCtrl",a).controller("DaveImporterSearchModePageCtrl",i),e.$inject=["$timeout","$http","$scope","$modal","$compile","$interval","$cookies","Upload","FormSettingParseService","ImporterSocket","DirectiveService","generalStateWRS"],t.$inject=["$scope","$modalInstance","currentImporter","Upload","ImporterSocket"],o.$inject=["FormSettingParseService","ImporterSocket","$scope","$timeout","$compile","$rootScope","$cookies","DirectiveService"],r.$inject=["ImporterSocket","$scope","$timeout","$compile","$modal","$location","$cookies","DirectiveService"],a.$inject=["$scope","$compile","ImporterSocket","DirectiveService"],i.$inject=["$scope","$compile","$cookies","ImporterSocket","DirectiveService","generalStateWRS"]}();