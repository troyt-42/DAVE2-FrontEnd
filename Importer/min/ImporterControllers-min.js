!function(){"use strict";function e(e,t,r,o,a,i,n,l,m,s){function p(){v.formModel={}}function c(){}function u(){console.log(v.randomImporterFormModel),m.emit("createRandomImporter",v.randomImporterFormModel)}function d(e){var t=o.open({templateUrl:"Importer/changeDataItemModal.html",controller:["$scope","$modalInstance",function(t,r){t.dataItem=e,t.type="text",t.ok=function(){r.close({name:t.dataItem.name,value:t.dataItem.value})},t.cancel=function(){r.dismiss("cancel")}}]});t.result.then(function(e){console.log(e)})}function g(e){var t=v.createNewImporterFormModel.Browse.indexOf(e);-1!==t&&(v.createNewImporterFormModel.Browse.splice(t,1),console.log(v.formModel))}function f(){var e=v.createNewImporterFormModel.Browse;if(console.log(e),e!=={}){for(var t={importerName:v.createNewImporterFormModel.Name,files:[],location:v.createNewImporterFormModel.Location,description:v.createNewImporterFormModel.Description,userName:"troy"},r=0;r<v.createNewImporterFormModel.Browse.length;r++)t.files.push({fileName:v.createNewImporterFormModel.Browse[r].name});s.DestroyDirectiveService(".angular-directive",angular.element(".angular-directive").isolateScope()),v.progressing=!0,n.upload({url:"/Importer/uploadFile",file:e,fields:{uploadInfo:{name:v.createNewImporterFormModel.Name,location:v.createNewImporterFormModel.Location,description:v.createNewImporterFormModel.Description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);console.log(t),v.fileUploadProgress=t,t>=100&&(v.progressingStat[0]=1,v.waitingMessage="Waiting response from server",console.log(v.waitingMessage))}).success(function(e,r,o,a){m.emit("createNewImporter",t),console.log("uploadSuccess")}).error(function(e){alert(e)})}else alert("Please Browse")}var v=this;v.cancelFile=p,v.cancelRandomImporter=c,v.createRandomImporter=u,v.changeDataItemConfig=d,v.removeFile=g,v.submitFile=f,v.alerts={stepOne:[],stepTwoB:[]},v.createNewImporterFormModel={},v.leftMenuExpanded=!1,v.fileUploadProgress=0,v.randomImporterFormFields=[{type:"input",key:"Maximum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Maximum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Reduction (/mm)",data:{inputType:"number",placeholder:0}},{type:"input",key:"Target Importer Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}}],v.randomImporterFormModel={"Maximum Value":0,"Minimum Value":0,"Maximum Slope":0,"Minimum Slope":0,"Reduction (/mm)":1e3,"Target Data Item Name":"test",Location:"brampton"},v.progressing=!1,v.progressingStat=[0,1],v.stepOneSearchMode=!1,v.stepOneSearchModeInput={},v.importerCreationPromise="",v.importerToDisplayContent=[],v.promiseToSolve=null,v.requestImporterPromiseToSolve=null,v.stepOne=!0,v.stepTwo=!1,v.stepTwoB=!1,v.stepThree=!1,v.stepOneLoading=!0,v.stepThreeFormCollection=[],v.sampleDataQuantity=50,v.sampleDataReduction=50,v.search2={fieldName:""},v.systemStatus="Normal",v.optionStatus={firstOpen:!1,secondOpen:!0,thirdOpen:!1,fourthOpen:!1},v.createNewImporterFormFields=[{type:"input",key:"Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}},{type:"textarea",key:"Description"},{type:"input3",key:"Browse",data:{inputType:"file"},ngModelAttrs:{fileAccept:{attribute:"accept"},fileUploaderMarkup:{attribute:"ngf-select"},fileUploaderMultipleMarkup:{attribute:"ngf-multiple"}},templateOptions:{fileAccept:".csv",fileUploaderMarkup:"",fileUploaderMultipleMarkup:!0},expressionProperties:{"templateOptions.disabled":"!(model.Name || model.Location || model.Description)"}}],v.waitingMessage="File Uploading",r.$on("progressing",function(e,t){v.progressing=!0,v.progressingStat=t,v.importerCreationPromise=i(function(){v.fileUploadProgress+=4},1e3,25),console.log("progressing"),console.log(t)}),r.$on("toggleLeftMenu",function(){angular.element(".importerContainerLeftMenu").toggleClass("noExpanded"),angular.element(".importerContainerRightPanel").toggleClass("expanded"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-left  animated flipInY"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-right  animated flipInY")," Expand"===angular.element("#js-expand-sign").html()?angular.element("#js-expand-sign").html(" Collapse"):" Collapse"===angular.element("#js-expand-sign").html()&&angular.element("#js-expand-sign").html(" Expand")}),r.$watch(function(){return v.stepOne},function(e){e===!0?r.$emit("dynamicBackground"):e===!1&&r.$emit("removeDynamicBackground")});var I=[];m.on("importerCreationResponse",function(e){if("Normal"===v.systemStatus&&(I=I.concat(e.data),1===e.completeState)){if(console.log(v.stepThreeFormCollection),v.stepThreeFormCollection=l(I),v.importerCreationMeta={importerName:e.importerName,location:e.location,userName:e.userName,files:e.files,description:e.description},I=[],v.progressing=!1,console.log(angular.element("dave-importer-configuration-page")),!angular.element("dave-importer-configuration-page").length){var t=r.$new(!0);t.formCollection=v.stepThreeFormCollection,t.importerCreationMeta=v.importerCreationMeta,s.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-configuration-page  class="angular-directive" form-collection="{{formCollection}}" importer-creation-meta="{{importerCreationMeta}}"></dave-importer-configuration-page>',t,a)}v.fileUploadProgress=0}}),m.on("importerCreationFinalResponse",function(t){if("Normal"===v.systemStatus){if(console.log(t),"COMPLETE"===t.reply){v.importerToRequest={importerName:t.payload.importerName,location:t.payload.location,ownerName:t.payload.ownerName,description:t.payload.description};var o=r.$new(!0);o.importerToRequest={},angular.copy(v.importerToRequest,o.importerToRequest),e(function(){s.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',o,a),v.progressing=!1},1500)}"PROGRESSING"===t.reply&&(v.progressingStat[1]=t.payload.numFiles,v.fileUploadProgress=100*t.payload.status,1===t.payload.status&&(v.progressingStat[0]=t.payload.numFinishProcessedFile)),"submitting"===t.reply&&1===t.completeState&&(i.cancel(v.importerCreationPromise),v.fileUploadProgress=100)}})}function t(e,t,r,o,a){function i(){m.uploading=!0,o.upload({url:"/Importer/uploadFile",file:m.files,fields:{uploadInfo:{name:m.currentImporter.importerName,location:m.currentImporter.location,description:m.currentImporter.description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);m.fileUploadProgress=t,t>=100&&(m.waitingMessage="Waiting response from server")}).success(function(e,t,r,o){for(var i={importerName:m.currentImporter.importerName,location:m.currentImporter.location,files:[]},n=0;n<m.files.length;n++)i.files.push({fileName:m.files[n].name});a.emit("updateImporter",i),console.log("uploadSuccess")}).error(function(e){alert(e)})}function n(){t.dismiss("cancel")}function l(e){var t=m.files.indexOf(e);-1!==t&&m.files.splice(t,1)}var m=this;m.update=i,m.cancel=n,m.removeFile=l,m.currentImporter=r,m.files=null,m.fileUploadProgress=0,m.waitingMessage="",m.uploading=!1}function r(e,t,r,o,a,i,n){function l(){t.emit("requestImporterList"),n.CheckDirectiveExpandStatus(".importerContainerRightPanel"),C.promiseToSolve=o(function(){for(var e=!1,t=0;t<C.alerts.length;t++)"Loading Importer List Failed. Please Check Your Internet Connection."===C.alerts[t].msg&&(e=!0);e||C.alerts.push({type:"danger",msg:"Loading Importer List Failed. Please Check Your Internet Connection."}),C.systemStatus="Error"},5e3)}function m(e,t){0!==C.avaliableTableColumns.length&&(C.importerListTableColumns[e.index-1].status=!0,C.avaliableTableColumns.splice(t,1))}function s(e,t,r){if(console.log(t),13===e.keyCode)if(t.index===t.newIndex)C.addTableColumn(t,r);else{t.newIndex>C.importerListTableColumns.length&&(t.newIndex=C.importerListTableColumns.length),t.newIndex<1&&(t.newIndex=1),C.importerListTableColumns[t.index-1].index=t.newIndex-1,C.importerListTableColumns[t.newIndex-1].index=t.index-1;var o=C.importerListTableColumns[t.index-1];C.importerListTableColumns[t.index-1]=C.importerListTableColumns[t.newIndex-1],C.importerListTableColumns[t.newIndex-1]=o,t.index=t.newIndex,console.log(t),console.log(C.avaliableTableColumns),console.log(C.importerListTableColumns),C.addTableColumn(t,r)}}function p(e){angular.element("div.alert.animated#importerList"+e).removeClass("fadeInDown"),angular.element("div.alert.animated#importerList"+e).addClass("fadeOutUp"),C.alerts.splice(e,1)}function c(e){for(var t=e-1;t>=0;t--)if(C.importerListTableColumns[t].status){var r=C.importerListTableColumns[e];r.index=t,C.importerListTableColumns[t].index=e,C.importerListTableColumns[e]=C.importerListTableColumns[t],C.importerListTableColumns[t]=r;break}}function u(e){for(var t=e+1;t<C.importerListTableColumns.length;t++)if(C.importerListTableColumns[t].status){var r=C.importerListTableColumns[e];r.index=t,C.importerListTableColumns[t].index=e,C.importerListTableColumns[e]=C.importerListTableColumns[t],C.importerListTableColumns[t]=r;break}}function d(e){C.importerListTableColumns[e].status=!1,C.avaliableTableColumns.push({index:e+1,value:C.importerListTableColumns[e].name,newIndex:e+1})}function g(e){C.importerToRequest=e;var t=r.$parent.$new(!0);t.importerToRequest={},angular.copy(C.importerToRequest,t.importerToRequest),n.DestroyDirectiveService("dave-importer-list-page",r),n.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',t,a)}function f(){angular.element(".js-layout").toggleClass("hidden")}function v(){r.$emit("toggleLeftMenu")}function I(){var e=r.$parent.$new(!0);n.DestroyDirectiveService("dave-importer-list-page",r),n.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-search-mode-page class="angular-directive" ></dave-importer-search-mode-page>',e,a)}var C=this;C.activate=l,C.addTableColumn=m,C.addTableColumnKeyPress=s,C.closeAlert=p,C.decreaseColumnIndex=c,C.increaseColumnIndex=u,C.removeColumn=d,C.requestImporter=g,C.toggleLayOutMenu=f,C.toggleLeftMenu=v,C.toggleSearchMode=I,C.alerts=[],C.avaliableTableColumns=[],C.importerListCurrentPage=1,C.importerList=[],C.importerListTableColumns=[{name:"importerName",status:!0,index:0},{name:"location",status:!0,index:1},{name:"ownerName",status:!0,index:2},{name:"type",status:!0,index:3},{name:"description",status:!0,index:4}],C.importerToRequest="",C.loading=!0,C.promiseToSolve="",C.search={},C.systemStatus="Normal",t.on("importerListData",function(e){"Normal"===C.systemStatus&&(o.cancel(C.promiseToSolve),1!==e.completeState?C.importerList=C.importerList.concat(e.list_out):(C.importerList=C.importerList.concat(e.list_out),C.loading=!1))}),r.$on("$destroy",function(e){t.removeListener("importerListData")}),C.activate()}function o(e,t,r,o,a,i){function n(){e.emit("requestImporter",c.importerToDisplay),i.CheckDirectiveExpandStatus(".importerContainerRightPanel"),"Normal"===c.systemStatus&&null===c.requestImporterPromiseToSolve&&(c.requestImporterPromiseToSolve=r(function(){-1===c.alerts.indexOf({type:"danger",msg:"Timeout"})&&c.alerts.push({type:"danger",msg:"Timeout"}),c.systemStatus="Error"},1500))}function l(){var e=t.$parent.$new(!0);i.DestroyDirectiveService("dave-importer-page",t),i.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',e,o)}function m(e){c.currentDataItem=e,c.importerDataItemData=c.importerDataItemToDisplay[c.currentDataItem.fieldName]}function s(){t.$emit("toggleLeftMenu")}function p(){var e=a.open({templateUrl:"Importer/ImporterModalViews/updateImporter.html",controller:"UpdateImporterModalCtrl as updateImporterModalCtrl",resolve:{currentImporter:function(){return c.importerToDisplay}}});e.result.then(function(e){console.log(e)})}var c=this;c.activate=n,c.backToImporterList=l,c.chooseDataItem=m,c.updateImporter=p,c.alerts=[],c.currentDataItem="",t.expanded=!1,c.importerDataItemToDisplay={},c.importerDataItemData=[],c.importerToDisplay=JSON.parse(t.importerToRequest),c.importerToDisplayContent=[],c.requestImporterPromiseToSolve=null,c.search={fieldName:""},c.systemStatus="Normal",c.toggleLeftMenu=s,e.on("importerData",function(t){if("Normal"===c.systemStatus&&(r.cancel(c.requestImporterPromiseToSolve),""===c.currentDataItem&&(c.currentDataItem=t.list_out[0]),c.importerToDisplayContent=c.importerToDisplayContent.concat(t.list_out),1===t.completeState&&(c.importerToDisplayContent.forEach(function(t,r,o){e.emit("requestImporterDataItemData",{fieldName:t.fieldName,location:c.importerToDisplay.location})}),0===c.importerToDisplayContent.length))){for(var o=!1,a=0;a<c.alerts.length;a++)"Received Empty Importer"===c.alerts[a].msg&&(o=!0);o||c.alerts.push({type:"warning",msg:"Received Empty Importer"})}}),e.on("importerDataItemData",function(e){"Normal"===c.systemStatus&&(c.importerDataItemToDisplay[e.name]||(c.importerDataItemToDisplay[e.name]=[]),c.importerDataItemToDisplay[e.name]=c.importerDataItemToDisplay[e.name].concat(e.data),1===e.completeState&&e.name===c.currentDataItem.fieldName&&(c.importerDataItemData=c.importerDataItemToDisplay[c.currentDataItem.fieldName]))}),t.$on("$destroy",function(t){e.removeListener("importerData"),e.removeListener("importerDataItemData")}),c.activate()}function a(e,t,r,o){function a(){var r=e.$parent.$new(!0);o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope()),o.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',r,t)}function i(){var t=[];for(var a in n.formCollection){var i={availableOptions:{}};for(var l in n.formCollection[a])switch(l){case"fields":break;case"checked":i.checked=n.formCollection[a][l];break;default:i.availableOptions[l]={name:l,value:n.formCollection[a][l]}}i.fieldName=a,t.push(i)}console.log(t),r.emit("decideImporterCreation",{location:n.importerCreationMeta.location,importerName:n.importerCreationMeta.importerName,userName:n.importerCreationMeta.userName,files:n.importerCreationMeta.files,data:t,description:n.importerCreationMeta.description});var m=[0,1];e.$emit("progressing",m),o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope())}var n=this;n.cancelImport=a,n.decideImport=i,console.log(e.formCollection),n.formCollection=JSON.parse(e.formCollection),n.importerCreationMeta=JSON.parse(e.importerCreationMeta)}function i(e,t,r,o,a){function i(){e.$emit("toggleLeftMenu")}var n=this;n.toggleLeftMenu=i,n.searchableColumns=[{name:"importerName",status:!0,index:0},{name:"location",status:!0,index:1},{name:"ownerName",status:!0,index:2},{name:"type",status:!0,index:3},{name:"description",status:!0,index:4}]}angular.module("Dave2.Importer").controller("ImporterUploadCtrl",e).controller("UpdateImporterModalCtrl",t).controller("DaveImporterListPageCtrl",r).controller("DaveImporterPageCtrl",o).controller("DaveImporterConfigurationPageCtrl",a).controller("DaveImporterSearchModePageCtrl",i),e.$inject=["$timeout","$http","$scope","$modal","$compile","$interval","Upload","FormSettingParseService","ImporterSocket","DirectiveService"],t.$inject=["$scope","$modalInstance","currentImporter","Upload","ImporterSocket"],r.$inject=["FormSettingParseService","ImporterSocket","$scope","$timeout","$compile","$rootScope","DirectiveService"],o.$inject=["ImporterSocket","$scope","$timeout","$compile","$modal","DirectiveService"],a.$inject=["$scope","$compile","ImporterSocket","DirectiveService"],i.$inject=["$scope","$compile","ImporterSocket","DirectiveService"]}();