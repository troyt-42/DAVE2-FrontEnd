!function(){"use strict";function e(e,t,r,o,a,i,n,l,s,m){function p(){I.formModel={}}function c(){}function u(){console.log(I.randomImporterFormModel),s.emit("createRandomImporter",I.randomImporterFormModel)}function d(e){var t=o.open({templateUrl:"Importer/changeDataItemModal.html",controller:["$scope","$modalInstance",function(t,r){t.dataItem=e,t.type="text",t.ok=function(){r.close({name:t.dataItem.name,value:t.dataItem.value})},t.cancel=function(){r.dismiss("cancel")}}]});t.result.then(function(e){console.log(e)})}function g(e){var t=I.createNewImporterFormModel.Browse.indexOf(e);-1!==t&&(I.createNewImporterFormModel.Browse.splice(t,1),console.log(I.formModel))}function f(){var e=I.createNewImporterFormModel.Browse;if(console.log(e),e!=={}){for(var t={importerName:I.createNewImporterFormModel.Name,files:[],location:I.createNewImporterFormModel.Location,description:I.createNewImporterFormModel.Description,userName:"troy"},r=0;r<I.createNewImporterFormModel.Browse.length;r++)t.files.push({fileName:I.createNewImporterFormModel.Browse[r].name});m.DestroyDirectiveService(".angular-directive",angular.element(".angular-directive").isolateScope()),I.progressing=!0,n.upload({url:"/Importer/uploadFile",file:e,fields:{uploadInfo:{name:I.createNewImporterFormModel.Name,location:I.createNewImporterFormModel.Location,description:I.createNewImporterFormModel.Description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);console.log(t),I.fileUploadProgress=t,t>=100&&(I.progressingStat[0]=1,I.waitingMessage="Waiting response from server",console.log(I.waitingMessage))}).success(function(e,r,o,a){s.emit("createNewImporter",t),console.log("uploadSuccess")}).error(function(e){alert(e)})}else alert("Please Browse")}function v(){I.stepOneSearchMode=I.stepOneSearchMode?!1:!0,angular.element("#js-pagination").toggleClass("rotateInUpLeft"),angular.element("#js-pagination").toggleClass("rotateOutDownLeft"),console.log(angular.element("#js-search-sign").html())," Search Mode"===angular.element("#js-search-sign").html()?angular.element("#js-search-sign").html(" Importer List"):" Importer List"===angular.element("#js-search-sign").html()&&angular.element("#js-search-sign").html(" Search Mode")}var I=this;I.cancelFile=p,I.cancelRandomImporter=c,I.createRandomImporter=u,I.changeDataItemConfig=d,I.removeFile=g,I.submitFile=f,I.toggleSearchMode=v,I.alerts={stepOne:[],stepTwoB:[]},I.createNewImporterFormModel={},I.fileUploadProgress=0,I.randomImporterFormFields=[{type:"input",key:"Maximum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Value",data:{inputType:"number",placeholder:0}},{type:"input",key:"Maximum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Minimum Slope",data:{inputType:"number",placeholder:0}},{type:"input",key:"Reduction (/mm)",data:{inputType:"number",placeholder:0}},{type:"input",key:"Target Data Item Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}}],I.randomImporterFormModel={"Maximum Value":0,"Minimum Value":0,"Maximum Slope":0,"Minimum Slope":0,"Reduction (/mm)":1e3,"Target Data Item Name":"test",Location:"brampton"},I.progressing=!1,I.progressingStat=[0,1],I.stepOneSearchMode=!1,I.stepOneSearchModeInput={},I.importerCreationPromise="",I.importerToDisplayContent=[],I.promiseToSolve=null,I.requestImporterPromiseToSolve=null,I.stepOne=!0,I.stepTwo=!1,I.stepTwoB=!1,I.stepThree=!1,I.stepOneLoading=!0,I.stepThreeFormCollection=[],I.sampleDataQuantity=50,I.sampleDataReduction=50,I.search2={fieldName:""},I.systemStatus="Normal",I.optionStatus={firstOpen:!1,secondOpen:!0,thirdOpen:!1,fourthOpen:!1},I.createNewImporterFormFields=[{type:"input",key:"Name",data:{placeholder:"example"}},{type:"input",key:"Location",data:{placeholder:"example"}},{type:"textarea",key:"Description"},{type:"input3",key:"Browse",data:{inputType:"file"},ngModelAttrs:{fileAccept:{attribute:"accept"},fileUploaderMarkup:{attribute:"ngf-select"},fileUploaderMultipleMarkup:{attribute:"ngf-multiple"}},templateOptions:{fileAccept:".csv",fileUploaderMarkup:"",fileUploaderMultipleMarkup:!0},expressionProperties:{"templateOptions.disabled":"!(model.Name || model.Location || model.Description)"}}],I.waitingMessage="File Uploading",r.$on("progressing",function(e,t){I.progressing=!0,I.progressingStat=t,I.importerCreationPromise=i(function(){I.fileUploadProgress+=4},1e3,25),console.log("progressing"),console.log(t)}),r.$watch(function(){return I.stepOne},function(e){e===!0?r.$emit("dynamicBackground"):e===!1&&r.$emit("removeDynamicBackground")});var C=[];s.on("importerCreationResponse",function(e){if("Normal"===I.systemStatus&&(C=C.concat(e.data),1===e.completeState)){if(console.log(I.stepThreeFormCollection),I.stepThreeFormCollection=l(C),I.importerCreationMeta={importerName:e.importerName,location:e.location,userName:e.userName,files:e.files,description:e.description},C=[],I.progressing=!1,console.log(angular.element("dave-importer-configuration-page")),!angular.element("dave-importer-configuration-page").length){var t=r.$new(!0);t.formCollection=I.stepThreeFormCollection,t.importerCreationMeta=I.importerCreationMeta,m.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-configuration-page  class="angular-directive" form-collection="{{formCollection}}" importer-creation-meta="{{importerCreationMeta}}"></dave-importer-configuration-page>',t,a)}I.fileUploadProgress=0}}),s.on("importerCreationFinalResponse",function(t){if("Normal"===I.systemStatus){if(console.log(t),"COMPLETE"===t.reply){I.importerToRequest={importerName:t.payload.importerName,location:t.payload.location,ownerName:t.payload.ownerName,description:t.payload.description};var o=r.$parent.$new(!0);o.importerToRequest={},angular.copy(I.importerToRequest,o.importerToRequest),e(function(){m.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',o,a),I.progressing=!1},1500)}"PROGRESSING"===t.reply&&(I.progressingStat[1]=t.payload.numFiles,I.fileUploadProgress=100*t.payload.status,1===t.payload.status&&(I.progressingStat[0]=t.payload.numFinishProcessedFile)),"submitting"===t.reply&&1===t.completeState&&(i.$cancel(I.importerCreationPromise),I.fileUploadProgress=1)}})}function t(e,t,r,o,a){function i(){s.uploading=!0,o.upload({url:"/Importer/uploadFile",file:s.files,fields:{uploadInfo:{name:s.currentImporter.importerName,location:s.currentImporter.location,description:s.currentImporter.description}}}).progress(function(e){var t=parseInt(100*e.loaded/e.total);s.fileUploadProgress=t,t>=100&&(s.waitingMessage="Waiting response from server")}).success(function(e,t,r,o){for(var i={importerName:s.currentImporter.importerName,location:s.currentImporter.location,files:[]},n=0;n<s.files.length;n++)i.files.push({fileName:s.files[n].name});a.emit("updateImporter",i),console.log("uploadSuccess")}).error(function(e){alert(e)})}function n(){t.dismiss("cancel")}function l(e){var t=s.files.indexOf(e);-1!==t&&s.files.splice(t,1)}var s=this;s.update=i,s.cancel=n,s.removeFile=l,s.currentImporter=r,s.files=null,s.fileUploadProgress=0,s.waitingMessage="",s.uploading=!1}function r(e,t,r,o,a,i,n){function l(){t.emit("requestImporterList"),I.promiseToSolve=o(function(){for(var e=!1,t=0;t<I.alerts.length;t++)"Loading Importer List Failed. Please Check Your Internet Connection."===I.alerts[t].msg&&(e=!0);e||I.alerts.push({type:"danger",msg:"Loading Importer List Failed. Please Check Your Internet Connection."}),I.systemStatus="Error"},5e3)}function s(e,t){0!==I.avaliableTableColumns.length&&(I.importerListTableColumns[e.index-1].status=!0,I.avaliableTableColumns.splice(t,1))}function m(e,t,r){if(console.log(t),13===e.keyCode)if(t.index===t.newIndex)I.addTableColumn(t,r);else{t.newIndex>I.importerListTableColumns.length&&(t.newIndex=I.importerListTableColumns.length),t.newIndex<1&&(t.newIndex=1),I.importerListTableColumns[t.index-1].index=t.newIndex-1,I.importerListTableColumns[t.newIndex-1].index=t.index-1;var o=I.importerListTableColumns[t.index-1];I.importerListTableColumns[t.index-1]=I.importerListTableColumns[t.newIndex-1],I.importerListTableColumns[t.newIndex-1]=o,t.index=t.newIndex,console.log(t),console.log(I.avaliableTableColumns),console.log(I.importerListTableColumns),I.addTableColumn(t,r)}}function p(e){angular.element("div.alert.animated#importerList"+e).removeClass("fadeInDown"),angular.element("div.alert.animated#importerList"+e).addClass("fadeOutUp"),I.alerts.splice(e,1)}function c(e){for(var t=e-1;t>=0;t--)if(I.importerListTableColumns[t].status){var r=I.importerListTableColumns[e];r.index=t,I.importerListTableColumns[t].index=e,I.importerListTableColumns[e]=I.importerListTableColumns[t],I.importerListTableColumns[t]=r;break}}function u(e){for(var t=e+1;t<I.importerListTableColumns.length;t++)if(I.importerListTableColumns[t].status){var r=I.importerListTableColumns[e];r.index=t,I.importerListTableColumns[t].index=e,I.importerListTableColumns[e]=I.importerListTableColumns[t],I.importerListTableColumns[t]=r;break}}function d(e){I.importerListTableColumns[e].status=!1,I.avaliableTableColumns.push({index:e+1,value:I.importerListTableColumns[e].name,newIndex:e+1})}function g(e){I.importerToRequest=e;var t=r.$parent.$new(!0);t.importerToRequest={},angular.copy(I.importerToRequest,t.importerToRequest),n.DestroyDirectiveService("dave-importer-list-page",r),n.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-page class="angular-directive" importer-to-request="{{importerToRequest}}"></dave-importer-page>',t,a)}function f(){angular.element(".js-layout").toggleClass("hidden")}function v(){angular.element(".importerContainerLeftMenu").toggleClass("noExpanded"),angular.element(".importerContainerRightPanel").toggleClass("expanded"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-left  animated flipInY"),angular.element("#js-expand-arrow").toggleClass("glyphicon-arrow-right  animated flipInY")," Expand"===angular.element("#js-expand-sign").html()?angular.element("#js-expand-sign").html(" Collapse"):" Collapse"===angular.element("#js-expand-sign").html()&&angular.element("#js-expand-sign").html(" Expand")}var I=this;I.activate=l,I.addTableColumn=s,I.addTableColumnKeyPress=m,I.closeAlert=p,I.decreaseColumnIndex=c,I.increaseColumnIndex=u,I.removeColumn=d,I.requestImporter=g,I.toggleLayOutMenu=f,I.toggleLeftMenu=v,I.alerts=[],I.avaliableTableColumns=[],I.importerListCurrentPage=1,I.importerList=[],I.importerListTableColumns=[{name:"importerName",status:!0,index:0},{name:"location",status:!0,index:1},{name:"ownerName",status:!0,index:2},{name:"type",status:!0,index:3},{name:"description",status:!0,index:4}],I.importerToRequest="",I.loading=!0,I.promiseToSolve="",I.search={},I.systemStatus="Normal",t.on("importerListData",function(e){"Normal"===I.systemStatus&&(o.cancel(I.promiseToSolve),1!==e.completeState?I.importerList=I.importerList.concat(e.list_out):(I.importerList=I.importerList.concat(e.list_out),I.loading=!1,console.log(I.importerList)))}),I.activate()}function o(e,t,r,o,a,i){function n(){e.emit("requestImporter",p.importerToDisplay),"Normal"===p.systemStatus&&null===p.requestImporterPromiseToSolve&&(p.requestImporterPromiseToSolve=r(function(){-1===p.alerts.indexOf({type:"danger",msg:"Timeout"})&&p.alerts.push({type:"danger",msg:"Timeout"}),p.systemStatus="Error"},1500))}function l(){var e=t.$parent.$new(!0);i.DestroyDirectiveService("dave-importer-page",t),i.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',e,o)}function s(e){p.currentDataItem=e,p.importerDataItemData=p.importerDataItemToDisplay[p.currentDataItem.fieldName]}function m(){var e=a.open({templateUrl:"Importer/ImporterModalViews/updateImporter.html",controller:"UpdateImporterModalCtrl as updateImporterModalCtrl",resolve:{currentImporter:function(){return p.importerToDisplay}}});e.result.then(function(e){console.log(e)})}var p=this;p.activate=n,p.backToImporterList=l,p.chooseDataItem=s,p.updateImporter=m,p.alerts=[],p.currentDataItem="",p.importerDataItemToDisplay={},p.importerDataItemData=[],p.importerToDisplay=JSON.parse(t.importerToRequest),p.importerToDisplayContent=[],p.requestImporterPromiseToSolve=null,p.search={fieldName:""},p.systemStatus="Normal",e.on("importerData",function(t){if("Normal"===p.systemStatus&&(r.cancel(p.requestImporterPromiseToSolve),console.log(t),""===p.currentDataItem&&(p.currentDataItem=t.list_out[0],console.log(p.currentDataItem)),p.importerToDisplayContent=p.importerToDisplayContent.concat(t.list_out),1===t.completeState&&(console.log(p.importerToDisplayContent),p.importerToDisplayContent.forEach(function(t,r,o){e.emit("requestImporterDataItemData",{fieldName:t.fieldName,location:p.importerToDisplay.location})}),0===p.importerToDisplayContent.length))){for(var o=!1,a=0;a<p.alerts.length;a++)"Received Empty Importer"===p.alerts[a].msg&&(o=!0);o||p.alerts.push({type:"warning",msg:"Received Empty Importer"})}}),e.on("importerDataItemData",function(e){"Normal"===p.systemStatus&&(console.log(e),p.importerDataItemToDisplay[e.name]||(p.importerDataItemToDisplay[e.name]=[]),p.importerDataItemToDisplay[e.name]=p.importerDataItemToDisplay[e.name].concat(e.data),1===e.completeState&&e.name===p.currentDataItem.fieldName&&(p.importerDataItemData=p.importerDataItemToDisplay[p.currentDataItem.fieldName],console.log(p.importerDataItemData)))}),p.activate()}function a(e,t,r,o){function a(){var r=e.$parent.$new(!0);o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope()),o.AddDirectiveService(".importerContainerRightPanel",'<dave-importer-list-page  class="angular-directive"></dave-importer-list-page>',r,t)}function i(){var t=[];for(var a in n.formCollection){var i={availableOptions:{}};for(var l in n.formCollection[a])switch(l){case"fields":break;case"checked":i.checked=n.formCollection[a][l];break;default:i.availableOptions[l]={name:l,value:n.formCollection[a][l]}}i.fieldName=a,t.push(i)}console.log(t),r.emit("decideImporterCreation",{location:n.importerCreationMeta.location,importerName:n.importerCreationMeta.importerName,userName:n.importerCreationMeta.userName,files:n.importerCreationMeta.files,data:t,description:n.importerCreationMeta.description});var s=[0,1];e.$emit("progressing",s),o.DestroyDirectiveService("dave-importer-configuration-page",angular.element("dave-importer-configuration-page").isolateScope())}var n=this;n.cancelImport=a,n.decideImport=i,console.log(e.formCollection),n.formCollection=JSON.parse(e.formCollection),n.importerCreationMeta=JSON.parse(e.importerCreationMeta)}angular.module("Dave2.Importer").controller("ImporterUploadCtrl",e).controller("UpdateImporterModalCtrl",t).controller("DaveImporterListPageCtrl",r).controller("DaveImporterPageCtrl",o).controller("DaveImporterConfigurationPageCtrl",a),e.$inject=["$timeout","$http","$scope","$modal","$compile","$interval","Upload","FormSettingParseService","ImporterSocket","DirectiveService"],t.$inject=["$scope","$modalInstance","currentImporter","Upload","ImporterSocket"],r.$inject=["FormSettingParseService","ImporterSocket","$scope","$timeout","$compile","$rootScope","DirectiveService"],o.$inject=["ImporterSocket","$scope","$timeout","$compile","$modal","DirectiveService"],a.$inject=["$scope","$compile","ImporterSocket","DirectiveService"]}();